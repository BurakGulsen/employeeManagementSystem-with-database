/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BPII_ders1;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author BurakGulsen
 */
public class ToplamMaasDurum extends javax.swing.JFrame {

    Personel personel;
    /**
     * Creates new form ToplamMaasDurum
     */
    DefaultListModel dlm = new DefaultListModel();
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("BPII_ders1PU");

    public ToplamMaasDurum() {
        initComponents();
        listMaas.setModel(dlm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public boolean personelKontrol() {
        boolean varMı = false;
        EntityManager em = emf.createEntityManager();
        Query q1 = em.createQuery("SELECT p FROM Personel_1 p");
        List<Personel_1> personeller = q1.getResultList();
        if (personeller.size() != 0) {
            varMı = true;
        }
        return varMı;
    }

    public void toplamMaasYazdır() {
        if (personelKontrol() == true) {
            int toplam = 0;
            EntityManager em = emf.createEntityManager();
            Query q1 = em.createQuery("SELECT p FROM Personel_1 p");
            List<Personel_1> personeller = q1.getResultList();
            for (int i = 0; i < personeller.size(); i++) {
                toplam +=personeller.get(i).getMaas();
            }
            dlm.addElement("Personellere Verilecek Olan Toplam Maaş = " + toplam + " TL");
        } else {
            JOptionPane.showMessageDialog(null, "Şirkette Personel Bulunmamaktadır", "UYARI", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void toplamİsciMaas() {
        if (personelKontrol() == true) {
            int toplam = 0;
            EntityManager em = emf.createEntityManager();
            Query q1 = em.createQuery("SELECT p FROM Personel_1 p");
            List<Personel_1> personeller = q1.getResultList();
            for (int i = 0; i < personeller.size(); i++) {
                if (personeller.get(i).getUnvanId() == 1) {
                    toplam += personeller.get(i).getMaas();
                }
            }
            if (toplam == 0) {
                JOptionPane.showMessageDialog(null, "Bu unvana ait personel bulunmamaktadır!", "UYARI", JOptionPane.ERROR_MESSAGE);
            } else {
                dlm.addElement("İşçilere Verilecek Olan Toplam Maaş = " + toplam + " TL");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Şirkette Personel Bulunmamaktadır", "UYARI", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void toplamMuhMaas() {
        if (personelKontrol() == true) {
            int toplam = 0;
            EntityManager em = emf.createEntityManager();
            Query q1 = em.createQuery("SELECT p FROM Personel_1 p");
            List<Personel_1> personeller = q1.getResultList();
            for (int i = 0; i < personeller.size(); i++) {
                if (personeller.get(i).getUnvanId() == 2) {

                    toplam += personeller.get(i).getMaas();
                }
            }
            if (toplam == 0) {
                JOptionPane.showMessageDialog(null, "Bu unvana ait personel bulunmamaktadır!", "UYARI", JOptionPane.ERROR_MESSAGE);
            } else {
                dlm.addElement("Mühendislere Verilecek Olan Toplam Maaş = " + toplam + " TL");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Şirkette Personel Bulunmamaktadır", "UYARI", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void toplamTekMaas() {
        if (personelKontrol() == true) {
            int toplam = 0;
            EntityManager em = emf.createEntityManager();
            Query q1 = em.createQuery("SELECT p FROM Personel_1 p");
            List<Personel_1> personeller = q1.getResultList();
            for (int i = 0; i < personeller.size(); i++) {
                if (personeller.get(i).getUnvanId() == 3) {
                    toplam += personeller.get(i).getMaas();
                }
            }
            if (toplam == 0) {
                JOptionPane.showMessageDialog(null, "Bu unvana ait personel bulunmamaktadır!", "UYARI", JOptionPane.ERROR_MESSAGE);
            } else {
                dlm.addElement("Teknisyenlere Verilecek Olan Toplam Maaş = " + toplam + " TL");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Şirkette Personel Bulunmamaktadır", "UYARI", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void toplamYntcMaas() {
        if (personelKontrol() == true) {
            int toplam = 0;
            EntityManager em = emf.createEntityManager();
            Query q1 = em.createQuery("SELECT p FROM Personel_1 p");
            List<Personel_1> personeller = q1.getResultList();
            for (int i = 0; i < personeller.size(); i++) {
                if (personeller.get(i).getUnvanId() == 4) {
                    toplam += personeller.get(i).getMaas();
                }
            }
            if (toplam == 0) {
                JOptionPane.showMessageDialog(null, "Bu unvana ait personel bulunmamaktadır!", "UYARI", JOptionPane.ERROR_MESSAGE);
            } else {
                dlm.addElement("Yöneticilere Verilecek Olan Toplam Maaş = " + toplam + " TL");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Şirkette Personel Bulunmamaktadır", "UYARI", JOptionPane.ERROR_MESSAGE);
        }
    }

    public boolean ekstaUnvanBul() {
        boolean varMı = false;

        EntityManager em = emf.createEntityManager();
        Query q1 = em.createQuery("SELECT u FROM Unvan u");
        List<Unvan> unvanlar = q1.getResultList();
        for (Unvan u : unvanlar) {
            if (u.getUnvanId() == Integer.parseInt(txtUnvanID.getText())) {

                varMı = true;
            }
        }
        return varMı;
    }

    public void ekstraUnvanMaas() {
        try {
            if (personelKontrol() == true) {
                if (ekstaUnvanBul() == true) {
                    int toplam = 0;
                    EntityManager em = emf.createEntityManager();
                    Query q1 = em.createQuery("SELECT p FROM Personel_1 p");
                    List<Personel_1> personeller = q1.getResultList();
                    for (Personel_1 p : personeller) {
                        if (Integer.parseInt(txtUnvanID.getText()) == p.getUnvanId()) {
                            toplam += p.getMaas();
                        }
                    }
                    if (toplam == 0) {
                        JOptionPane.showMessageDialog(null, "Bu unvana ait personel bulunmamaktadır!", "UYARI", JOptionPane.ERROR_MESSAGE);
                    } else {
                        dlm.addElement(" Verilecek Olan Toplam Maaş = " + toplam + " TL");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Böyle bir unvan bulunmamaktadır!", "UYARI", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Şirkette Personel Bulunmamaktadır", "UYARI", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "GEÇERSİZ ID", "Uyarı", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void radioKontrol() {
        if (radioTumIsc.isSelected() || radioTumPers.isSelected() || radioTumMuh.isSelected()
                || radioTumTek.isSelected() || radioYntc.isSelected() || txtUnvanID.getText().isEmpty() == false) {

            if (radioTumPers.isSelected()) {
                toplamMaasYazdır();
            }
            if (radioTumIsc.isSelected()) {
                toplamİsciMaas();
            }
            if (radioTumMuh.isSelected()) {
                toplamMuhMaas();
            }
            if (radioTumTek.isSelected()) {
                toplamTekMaas();
            }
            if (radioYntc.isSelected()) {
                toplamYntcMaas();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Lütfen bir seçim yapın", "Uyarı", JOptionPane.ERROR_MESSAGE);
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        UnvanGrup = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMaas = new javax.swing.JList<>();
        btnGoster = new javax.swing.JButton();
        radioTumPers = new javax.swing.JRadioButton();
        radioTumIsc = new javax.swing.JRadioButton();
        radioTumMuh = new javax.swing.JRadioButton();
        radioTumTek = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        radioYntc = new javax.swing.JRadioButton();
        btnTemizle = new javax.swing.JButton();
        txtUnvanID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        UnvanGrup.setText("jRadioButton2");

        jRadioButton3.setText("jRadioButton3");

        jRadioButton4.setText("jRadioButton4");

        jScrollPane3.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        listMaas.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        listMaas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listMaas);

        btnGoster.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnGoster.setText("GÖSTER");
        btnGoster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGosterActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioTumPers);
        radioTumPers.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        radioTumPers.setText("Tüm Personeller");
        radioTumPers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTumPersActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioTumIsc);
        radioTumIsc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        radioTumIsc.setText("Tüm İşçiler");

        buttonGroup1.add(radioTumMuh);
        radioTumMuh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        radioTumMuh.setText("Tüm Mühendisler");

        buttonGroup1.add(radioTumTek);
        radioTumTek.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        radioTumTek.setText("Tüm Teknisyenler");
        radioTumTek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTumTekActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 102, 51));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("               LÜTFEN GÖRMEK İSTEDİĞİNİZ İŞLEMİ SEÇİN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("GERİ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioYntc);
        radioYntc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        radioYntc.setText("Tüm Yöneticiler");

        btnTemizle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnTemizle.setText("TEMİZLE");
        btnTemizle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTemizleActionPerformed(evt);
            }
        });

        txtUnvanID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Eğer ekstra ünvan varsa ünvan sicil numarasını yazıp öğrenebilirsiniz");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("UNVAN SİCİL NO GÖSTER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radioTumPers, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(radioTumIsc, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(radioTumMuh)
                        .addGap(47, 47, 47)
                        .addComponent(radioTumTek, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(radioYntc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtUnvanID, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnTemizle, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGoster, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(radioTumPers, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioTumIsc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioTumMuh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioYntc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioTumTek, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(txtUnvanID, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTemizle, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnGoster, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGosterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGosterActionPerformed
        if ((radioTumIsc.isSelected() && txtUnvanID.getText().isEmpty() == false) || (radioTumPers.isSelected() && txtUnvanID.getText().isEmpty() == false)
                || (radioTumMuh.isSelected() && txtUnvanID.getText().isEmpty() == false)
                || (radioTumTek.isSelected() && txtUnvanID.getText().isEmpty() == false) || (radioYntc.isSelected() && txtUnvanID.getText().isEmpty() == false)) {
            txtUnvanID.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Lütfen bir seçim yapın", "Uyarı", JOptionPane.ERROR_MESSAGE);
            ToplamMaasDurum tmd = new ToplamMaasDurum();
            tmd.setVisible(true);
            tmd.setLocationRelativeTo(null);
            tmd.pack();
            this.dispose();
            tmd.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        } else if (txtUnvanID.getText().isEmpty() == false) {

            ekstraUnvanMaas();

        } else {
            radioKontrol();

        }

    }//GEN-LAST:event_btnGosterActionPerformed

    private void radioTumTekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTumTekActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioTumTekActionPerformed

    private void radioTumPersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTumPersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioTumPersActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        MaasDurumSayfasi mds = new MaasDurumSayfasi();
        mds.setVisible(true);
        mds.setLocationRelativeTo(null);
        mds.pack();
        this.dispose();
        mds.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnTemizleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTemizleActionPerformed
        dlm.removeAllElements();
        txtUnvanID.setEnabled(true);

    }//GEN-LAST:event_btnTemizleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        UnvanSicilNoGstr unv = new UnvanSicilNoGstr();
        unv.setVisible(true);
        unv.setLocationRelativeTo(null);
        unv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ToplamMaasDurum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ToplamMaasDurum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ToplamMaasDurum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ToplamMaasDurum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ToplamMaasDurum().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton UnvanGrup;
    private javax.swing.JButton btnGoster;
    private javax.swing.JButton btnTemizle;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listMaas;
    private javax.swing.JRadioButton radioTumIsc;
    private javax.swing.JRadioButton radioTumMuh;
    private javax.swing.JRadioButton radioTumPers;
    private javax.swing.JRadioButton radioTumTek;
    private javax.swing.JRadioButton radioYntc;
    private javax.swing.JTextField txtUnvanID;
    // End of variables declaration//GEN-END:variables
}
