/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BPII_ders1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author BurakGulsen
 */
public class PersonelBilgileriGnclle extends javax.swing.JFrame {

    /**
     * Creates new form PersonelBilgileriGnclle
     */
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("BPII_ders1PU");
    DefaultTableModel dtm = new DefaultTableModel();

    public PersonelBilgileriGnclle() {
        initComponents();
        tabloprs.setModel(dtm);
        comboIDdoldur();
        comboTurDoldur();
        dtm.setColumnIdentifiers(new String[]{"Sicil Numarası", "Adı", "Soyadı", "Cinsiyet", "Yaş", "Maaş", "Unvan Sicil Numarası"});
        personelBilgiGstr();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void personelBilgiGstr() {
        dtm.setRowCount(0);
        Connection con = null;
        Statement s = null;
        ResultSet rs = null;
        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
            s = con.createStatement();
            rs = s.executeQuery("select * from Personel");
            while (rs.next()) {
                dtm.addRow(new String[]{rs.getString("personel_id"), rs.getString("adi"), rs.getString("soyadi"), rs.getString("cinsiyet"), rs.getString("Yas"), rs.getString("maas"), rs.getString("UNVAN_ID")});

            }

        } catch (SQLException ex) {
            Logger.getLogger(PersonelBilgileriGnclle.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public boolean unvanIDkontrol() {
        boolean varMı = false;
        EntityManager em = emf.createEntityManager();
        Query q1 = em.createQuery("SELECT u FROM Unvan u");
        List<Unvan> unvanlar = q1.getResultList();
        for (Unvan unv : unvanlar) {
            if (Integer.parseInt(txtdegistir.getText()) == unv.getUnvanId()) {
                varMı = true;
            }
        }

        return varMı;

    }

    boolean desenKontrol(String aranan, String desen) {
        Pattern p = Pattern.compile(desen);
        Matcher m = p.matcher(aranan);
        return m.find();
    }

    public void comboIDdoldur() {
        Connection con = null;
        PreparedStatement sUpdate = null;
        PreparedStatement sInsert = null;
        try {

            con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM PERSONEL");
            while (rs.next()) {
                int personellID = rs.getInt("personel_id");
                comboID.addItem(String.valueOf(personellID));
            }

        } catch (SQLException ex) {
            Logger.getLogger(PersonelBilgileriGnclle.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void comboTurDoldur() {

        comboTur.addItem("adi");
        comboTur.addItem("soyadi");
        comboTur.addItem("yas");
        comboTur.addItem("cinsiyet");
        comboTur.addItem("unvan_id");
        comboTur.addItem("maas");

    }

    public void bilgileriKaydet() {
        if (comboTur.getSelectedItem() == "adi") {
            Connection con = null;
            PreparedStatement sUpdate = null;
            PreparedStatement sInsert = null;
            try {
                if (desenKontrol(txtdegistir.getText(), "[a-zA-Z]")) {

                    con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");

                    String id = comboID.getSelectedItem().toString();
                    String sqlUpdate = "UPDATE personel SET adi=? WHERE personel_id=?";
                    sUpdate = con.prepareStatement(sqlUpdate);
                    sUpdate.setString(1, txtdegistir.getText());
                    sUpdate.setInt(2, Integer.parseInt(id));
                    System.out.println(sqlUpdate);
                    sUpdate.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Personelin adı başarıyla Güncellendi!");

                } else {
                    JOptionPane.showMessageDialog(null, "HATALI YAZIM", "UYARI!", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(PersonelBilgileriGnclle.class.getName()).log(Level.SEVERE, null, ex);
            } catch (java.lang.NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "HATALI YAZIM", "UYARI!", JOptionPane.ERROR_MESSAGE);

            }
            personelBilgiGstr();

        } else if (comboTur.getSelectedItem() == "soyadi") {
            Connection con = null;
            PreparedStatement sUpdate = null;
            PreparedStatement sInsert = null;
            try {
                if (desenKontrol(txtdegistir.getText(), "[a-zA-Z]")) {
                    con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
                    con.setAutoCommit(false);
                    String id = comboID.getSelectedItem().toString();
                    String sqlUpdate = "UPDATE personel SET soyadi=? WHERE personel_id=?";
                    sUpdate = con.prepareStatement(sqlUpdate);
                    sUpdate.setString(1, txtdegistir.getText());
                    sUpdate.setInt(2, Integer.parseInt(id));
                    System.out.println(sqlUpdate);
                    sUpdate.executeUpdate();
                    con.commit();
                    JOptionPane.showMessageDialog(null, "Personelin soyadı başarıyla Güncellendi!");
                } else {
                    JOptionPane.showMessageDialog(null, "HATALI YAZIM", "UYARI!", JOptionPane.ERROR_MESSAGE);
                }

            } catch (SQLException ex) {
                Logger.getLogger(PersonelBilgileriGnclle.class.getName()).log(Level.SEVERE, null, ex);
            } catch (java.lang.NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "HATALI YAZIM", "UYARI!", JOptionPane.ERROR_MESSAGE);
            }

            personelBilgiGstr();
        } else if (comboTur.getSelectedItem() == "yas") {
            Connection con = null;
            PreparedStatement sUpdate = null;
            PreparedStatement sInsert = null;
            try {
                if (desenKontrol(txtdegistir.getText(), "[0-9]")) {
                    int sayi = Integer.valueOf(txtdegistir.getText());
                    if (sayi > 64 || sayi < 18) {
                        JOptionPane.showMessageDialog(null, "Lütfen geçerli bir yaş girin", "UYARI!", JOptionPane.ERROR_MESSAGE);
                        txtdegistir.setText("");
                    } else {
                        con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
                        con.setAutoCommit(false);
                        String id = comboID.getSelectedItem().toString();
                        String sqlUpdate = "UPDATE personel SET yas=? WHERE personel_id=?";
                        sUpdate = con.prepareStatement(sqlUpdate);
                        sUpdate.setInt(1, Integer.parseInt(txtdegistir.getText()));
                        sUpdate.setInt(2, Integer.parseInt(id));
                        System.out.println(sqlUpdate);
                        sUpdate.executeUpdate();
                        con.commit();
                        JOptionPane.showMessageDialog(null, "Personelin yaş bilgisi başarıyla Güncellendi!");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "HATALI YAZIM", "UYARI!", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(PersonelBilgileriGnclle.class.getName()).log(Level.SEVERE, null, ex);
            } catch (java.lang.NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "HATALI YAZIM", "UYARI!", JOptionPane.ERROR_MESSAGE);
            }
            personelBilgiGstr();
        } else if (comboTur.getSelectedItem() == "cinsiyet") {
            Connection con = null;
            PreparedStatement sUpdate = null;
            PreparedStatement sInsert = null;
            try {
                if (desenKontrol(txtdegistir.getText(), "[a-zA-Z]")) {
                    if (txtdegistir.getText().equals("Erkek") || txtdegistir.getText().equals("Kadın")) {
                        con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
                        con.setAutoCommit(false);
                        String id = comboID.getSelectedItem().toString();
                        String sqlUpdate = "UPDATE personel SET cinsiyet=? WHERE personel_id=?";
                        sUpdate = con.prepareStatement(sqlUpdate);
                        sUpdate.setString(1, txtdegistir.getText());
                        sUpdate.setInt(2, Integer.parseInt(id));
                        System.out.println(sqlUpdate);
                        sUpdate.executeUpdate();
                        con.commit();
                        JOptionPane.showMessageDialog(null, "Personelin cinsiyet bilgisi başarıyla Güncellendi!");
                    } else {

                        JOptionPane.showMessageDialog(null, "HATALI YAZIM", "HATA", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "HATALI YAZIM", "HATA", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(PersonelBilgileriGnclle.class.getName()).log(Level.SEVERE, null, ex);
            } catch (java.lang.NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "HATALI YAZIM", "UYARI!", JOptionPane.ERROR_MESSAGE);
            }
            personelBilgiGstr();
        } else if (comboTur.getSelectedItem() == "unvan_id") {
            Connection con = null;
            PreparedStatement sUpdate = null;
            PreparedStatement sInsert = null;
            try {
                if (desenKontrol(txtdegistir.getText(), "[0-9]")) {
                    if (unvanIDkontrol() == false) {
                        JOptionPane.showMessageDialog(null, "GEÇERSİZ ID ", "HATA", JOptionPane.ERROR_MESSAGE);
                    } else {
                        con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
                        con.setAutoCommit(false);
                        String id = comboID.getSelectedItem().toString();
                        String sqlUpdate = "UPDATE personel SET unvan_id=? WHERE personel_id=?";
                        sUpdate = con.prepareStatement(sqlUpdate);

                        sUpdate.setInt(1, Integer.parseInt(txtdegistir.getText()));
                        sUpdate.setInt(2, Integer.parseInt(id));
                        System.out.println(sqlUpdate);
                        sUpdate.executeUpdate();
                        con.commit();
                        JOptionPane.showMessageDialog(null, "Personelin unvan sicil numarası başarıyla Güncellendi!");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "HATALI YAZIM", "HATA", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(PersonelBilgileriGnclle.class.getName()).log(Level.SEVERE, null, ex);
            } catch (java.lang.NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "HATALI YAZIM", "UYARI!", JOptionPane.ERROR_MESSAGE);
            }

            personelBilgiGstr();
        } else if (comboTur.getSelectedItem() == "maas") {
            Connection con = null;
            PreparedStatement sUpdate = null;
            PreparedStatement sInsert = null;
            try {
                if (desenKontrol(txtdegistir.getText(), "[0-9]")) {

                    con = DriverManager.getConnection("jdbc:derby://localhost:1527/sample", "app", "app");
                    con.setAutoCommit(false);
                    String id = comboID.getSelectedItem().toString();
                    String sqlUpdate = "UPDATE personel SET maas=? WHERE personel_id=?";
                    sUpdate = con.prepareStatement(sqlUpdate);
                    sUpdate.setInt(1, Integer.parseInt(txtdegistir.getText()));
                    sUpdate.setInt(2, Integer.parseInt(id));
                    System.out.println(sqlUpdate);
                    sUpdate.executeUpdate();
                    con.commit();
                    JOptionPane.showMessageDialog(null, "Personelin maaş bilgisi başarıyla Güncellendi!");
                } else {
                    JOptionPane.showMessageDialog(null, "HATALI YAZIM", "HATA", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(PersonelBilgileriGnclle.class.getName()).log(Level.SEVERE, null, ex);
            } catch (java.lang.NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "HATALI YAZIM", "UYARI!", JOptionPane.ERROR_MESSAGE);
            }

            personelBilgiGstr();
        }

    }

    public void boslukKontrol() {
        if (txtdegistir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Lütfen değişiklik yapmak istediğiniz veriyi yazın.", "UYARI!", JOptionPane.ERROR_MESSAGE);;
        } else {
            bilgileriKaydet();
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabloprs = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnKaydet = new javax.swing.JButton();
        comboID = new javax.swing.JComboBox<>();
        comboTur = new javax.swing.JComboBox<>();
        txtdegistir = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("YENİLE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        tabloprs.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        tabloprs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabloprs);

        jPanel2.setBackground(new java.awt.Color(255, 102, 51));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LÜTFEN GÜNCELLEMEK İSTEDİĞİNİZ BİLGİYİ GİRMEDEN ÖNCE PERSONELİN ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("SİCİL NUMARASINI VE HANGİ ÖZELLİĞİNİ DEĞİŞTİRMEK İSTEDİĞİNİZİ SEÇİN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnKaydet.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnKaydet.setText("KAYDET");
        btnKaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKaydetActionPerformed(evt);
            }
        });

        comboID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        comboTur.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        txtdegistir.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtdegistir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdegistirActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("GERİ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("UNVAN SİCİL NO GÖSTER");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboID, 0, 407, Short.MAX_VALUE)
                    .addComponent(txtdegistir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboTur, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnKaydet, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboID, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                    .addComponent(comboTur))
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtdegistir, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnKaydet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKaydetActionPerformed
        try {
            boslukKontrol();
        } catch (NullPointerException e) {
           JOptionPane.showMessageDialog(null, "Şirkette Personel Bulunmamaktadır!", "UYARI!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnKaydetActionPerformed

    private void txtdegistirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdegistirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdegistirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Menu menu = new Menu();
        menu.setVisible(true);
        menu.setLocationRelativeTo(null);
        menu.pack();
        menu.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        UnvanSicilNoGstr unv = new UnvanSicilNoGstr();
        unv.setVisible(true);
        unv.setLocationRelativeTo(null);
        unv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonelBilgileriGnclle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonelBilgileriGnclle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonelBilgileriGnclle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonelBilgileriGnclle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonelBilgileriGnclle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKaydet;
    private javax.swing.JComboBox<String> comboID;
    private javax.swing.JComboBox<String> comboTur;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable tabloprs;
    private javax.swing.JTextField txtdegistir;
    // End of variables declaration//GEN-END:variables
}
